// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/file_transfer.proto

#include "protobuf/file_transfer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_protobuf_2ffile_5ftransfer_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2ffile_5ftransfer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CreateDirectoryRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2ffile_5ftransfer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DownloadRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2ffile_5ftransfer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_DriveList_Item;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2ffile_5ftransfer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileListRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2ffile_5ftransfer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_FileList_Item;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2ffile_5ftransfer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Packet;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2ffile_5ftransfer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PacketRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2ffile_5ftransfer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RemoveRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2ffile_5ftransfer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RenameRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2ffile_5ftransfer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UploadRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_protobuf_2ffile_5ftransfer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_FileList;
}  // namespace protobuf_protobuf_2ffile_5ftransfer_2eproto
namespace secft {
namespace proto {
namespace file_transfer_packet {
class DriveList_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DriveList_Item>
      _instance;
} _DriveList_Item_default_instance_;
class DriveListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DriveList>
      _instance;
} _DriveList_default_instance_;
class FileList_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileList_Item>
      _instance;
} _FileList_Item_default_instance_;
class FileListDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileList>
      _instance;
} _FileList_default_instance_;
class FileListRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileListRequest>
      _instance;
} _FileListRequest_default_instance_;
class UploadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UploadRequest>
      _instance;
} _UploadRequest_default_instance_;
class DownloadRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DownloadRequest>
      _instance;
} _DownloadRequest_default_instance_;
class PacketRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PacketRequest>
      _instance;
} _PacketRequest_default_instance_;
class PacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Packet>
      _instance;
} _Packet_default_instance_;
class CreateDirectoryRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateDirectoryRequest>
      _instance;
} _CreateDirectoryRequest_default_instance_;
class RenameRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RenameRequest>
      _instance;
} _RenameRequest_default_instance_;
class RemoveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveRequest>
      _instance;
} _RemoveRequest_default_instance_;
class ReplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Reply>
      _instance;
} _Reply_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
}  // namespace file_transfer_packet
}  // namespace proto
}  // namespace secft
namespace protobuf_protobuf_2ffile_5ftransfer_2eproto {
static void InitDefaultsDriveList_Item() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_DriveList_Item_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::DriveList_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::DriveList_Item::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DriveList_Item =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDriveList_Item}, {}};

static void InitDefaultsDriveList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_DriveList_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::DriveList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::DriveList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_DriveList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsDriveList}, {
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_DriveList_Item.base,}};

static void InitDefaultsFileList_Item() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_FileList_Item_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::FileList_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::FileList_Item::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileList_Item =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileList_Item}, {}};

static void InitDefaultsFileList() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_FileList_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::FileList();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::FileList::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FileList =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFileList}, {
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_FileList_Item.base,}};

static void InitDefaultsFileListRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_FileListRequest_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::FileListRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::FileListRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FileListRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFileListRequest}, {}};

static void InitDefaultsUploadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_UploadRequest_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::UploadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::UploadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UploadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUploadRequest}, {}};

static void InitDefaultsDownloadRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_DownloadRequest_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::DownloadRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::DownloadRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DownloadRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDownloadRequest}, {}};

static void InitDefaultsPacketRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_PacketRequest_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::PacketRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::PacketRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PacketRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPacketRequest}, {}};

static void InitDefaultsPacket() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_Packet_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::Packet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::Packet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Packet =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPacket}, {}};

static void InitDefaultsCreateDirectoryRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_CreateDirectoryRequest_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::CreateDirectoryRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::CreateDirectoryRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreateDirectoryRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreateDirectoryRequest}, {}};

static void InitDefaultsRenameRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_RenameRequest_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::RenameRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::RenameRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RenameRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRenameRequest}, {}};

static void InitDefaultsRemoveRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_RemoveRequest_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::RemoveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::RemoveRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RemoveRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRemoveRequest}, {}};

static void InitDefaultsReply() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_Reply_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::Reply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::Reply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Reply =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsReply}, {
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_FileList.base,
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_Packet.base,}};

static void InitDefaultsRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::secft::proto::file_transfer_packet::_Request_default_instance_;
    new (ptr) ::secft::proto::file_transfer_packet::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::secft::proto::file_transfer_packet::Request::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_Request =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsRequest}, {
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_FileListRequest.base,
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_CreateDirectoryRequest.base,
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_RenameRequest.base,
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_RemoveRequest.base,
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_DownloadRequest.base,
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_UploadRequest.base,
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_PacketRequest.base,
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_Packet.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_DriveList_Item.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DriveList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileList_Item.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileList.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FileListRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UploadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DownloadRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PacketRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Packet.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateDirectoryRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RenameRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RemoveRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Reply.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Request.base);
}

::google::protobuf::Metadata file_level_metadata[14];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::DriveList_Item, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::DriveList_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::DriveList_Item, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::DriveList_Item, path_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::DriveList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::DriveList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::DriveList, item_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileList_Item, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileList_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileList_Item, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileList_Item, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileList_Item, modification_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileList_Item, is_directory_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileList, item_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileListRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileListRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::FileListRequest, path_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::UploadRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::UploadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::UploadRequest, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::UploadRequest, overwrite_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::DownloadRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::DownloadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::DownloadRequest, path_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::PacketRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::PacketRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::PacketRequest, dummy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::PacketRequest, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::PacketRequest, offset_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Packet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Packet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Packet, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Packet, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Packet, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Packet, user_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Packet, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Packet, offset_),
  5,
  3,
  0,
  1,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::CreateDirectoryRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::CreateDirectoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::CreateDirectoryRequest, path_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::RenameRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::RenameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::RenameRequest, old_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::RenameRequest, new_name_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::RemoveRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::RemoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::RemoveRequest, path_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Reply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Reply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Reply, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Reply, file_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Reply, packet_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Request, file_list_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Request, create_directory_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Request, rename_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Request, remove_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Request, download_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Request, upload_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Request, packet_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::secft::proto::file_transfer_packet::Request, packet_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::secft::proto::file_transfer_packet::DriveList_Item)},
  { 9, 15, sizeof(::secft::proto::file_transfer_packet::DriveList)},
  { 16, 25, sizeof(::secft::proto::file_transfer_packet::FileList_Item)},
  { 29, 35, sizeof(::secft::proto::file_transfer_packet::FileList)},
  { 36, 42, sizeof(::secft::proto::file_transfer_packet::FileListRequest)},
  { 43, 50, sizeof(::secft::proto::file_transfer_packet::UploadRequest)},
  { 52, 58, sizeof(::secft::proto::file_transfer_packet::DownloadRequest)},
  { 59, 67, sizeof(::secft::proto::file_transfer_packet::PacketRequest)},
  { 70, 81, sizeof(::secft::proto::file_transfer_packet::Packet)},
  { 87, 93, sizeof(::secft::proto::file_transfer_packet::CreateDirectoryRequest)},
  { 94, 101, sizeof(::secft::proto::file_transfer_packet::RenameRequest)},
  { 103, 109, sizeof(::secft::proto::file_transfer_packet::RemoveRequest)},
  { 110, 118, sizeof(::secft::proto::file_transfer_packet::Reply)},
  { 121, 134, sizeof(::secft::proto::file_transfer_packet::Request)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_DriveList_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_DriveList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_FileList_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_FileList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_FileListRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_UploadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_DownloadRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_PacketRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_Packet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_CreateDirectoryRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_RenameRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_RemoveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_Reply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::secft::proto::file_transfer_packet::_Request_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "protobuf/file_transfer.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 14);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034protobuf/file_transfer.proto\022 secft.pr"
      "oto.file_transfer_packet\"\304\002\n\tDriveList\022>"
      "\n\004item\030\001 \003(\01320.secft.proto.file_transfer"
      "_packet.DriveList.Item\032\366\001\n\004Item\022C\n\004type\030"
      "\001 \002(\01625.secft.proto.file_transfer_packet"
      ".DriveList.Item.Type\022\014\n\004path\030\002 \002(\t\"\232\001\n\004T"
      "ype\022\020\n\014TYPE_UNKNOWN\020\000\022\016\n\nTYPE_CDROM\020\001\022\022\n"
      "\016TYPE_REMOVABLE\020\002\022\016\n\nTYPE_FIXED\020\003\022\017\n\013TYP"
      "E_REMOTE\020\004\022\014\n\010TYPE_RAM\020\005\022\024\n\020TYPE_HOME_FO"
      "LDER\020\006\022\027\n\023TYPE_DESKTOP_FOLDER\020\007\"\236\001\n\010File"
      "List\022=\n\004item\030\001 \003(\0132/.secft.proto.file_tr"
      "ansfer_packet.FileList.Item\032S\n\004Item\022\014\n\004n"
      "ame\030\001 \002(\t\022\014\n\004size\030\002 \002(\004\022\031\n\021modification_"
      "time\030\003 \002(\003\022\024\n\014is_directory\030\004 \002(\010\"\037\n\017File"
      "ListRequest\022\014\n\004path\030\001 \002(\t\"0\n\rUploadReque"
      "st\022\014\n\004path\030\001 \002(\t\022\021\n\toverwrite\030\002 \002(\010\"\037\n\017D"
      "ownloadRequest\022\014\n\004path\030\001 \002(\t\"A\n\rPacketRe"
      "quest\022\r\n\005dummy\030\001 \002(\r\022\021\n\tfile_size\030\002 \001(\004\022"
      "\016\n\006offset\030\003 \001(\004\"\301\001\n\006Packet\022\r\n\005flags\030\001 \002("
      "\r\022\021\n\tfile_size\030\002 \002(\004\022\014\n\004data\030\003 \002(\014\022\021\n\tus"
      "er_name\030\004 \002(\t\022\r\n\005token\030\005 \002(\t\022\016\n\006offset\030\006"
      " \001(\004\"U\n\005Flags\022\016\n\nFLAG_ERROR\020\000\022\017\n\013FLAG_PA"
      "CKET\020\001\022\025\n\021FLAG_FIRST_PACKET\020\002\022\024\n\020FLAG_LA"
      "ST_PACKET\020\004\"&\n\026CreateDirectoryRequest\022\014\n"
      "\004path\030\001 \002(\t\"3\n\rRenameRequest\022\020\n\010old_name"
      "\030\001 \002(\t\022\020\n\010new_name\030\002 \002(\t\"\035\n\rRemoveReques"
      "t\022\014\n\004path\030\001 \002(\t\"\272\001\n\005Reply\0228\n\006status\030\001 \002("
      "\0162(.secft.proto.file_transfer_packet.Sta"
      "tus\022=\n\tfile_list\030\002 \001(\0132*.secft.proto.fil"
      "e_transfer_packet.FileList\0228\n\006packet\030\003 \001"
      "(\0132(.secft.proto.file_transfer_packet.Pa"
      "cket\"\336\004\n\007Request\022L\n\021file_list_request\030\001 "
      "\001(\01321.secft.proto.file_transfer_packet.F"
      "ileListRequest\022Z\n\030create_directory_reque"
      "st\030\002 \001(\01328.secft.proto.file_transfer_pac"
      "ket.CreateDirectoryRequest\022G\n\016rename_req"
      "uest\030\003 \001(\0132/.secft.proto.file_transfer_p"
      "acket.RenameRequest\022G\n\016remove_request\030\004 "
      "\001(\0132/.secft.proto.file_transfer_packet.R"
      "emoveRequest\022K\n\020download_request\030\005 \002(\01321"
      ".secft.proto.file_transfer_packet.Downlo"
      "adRequest\022G\n\016upload_request\030\006 \002(\0132/.secf"
      "t.proto.file_transfer_packet.UploadReque"
      "st\022G\n\016packet_request\030\007 \002(\0132/.secft.proto"
      ".file_transfer_packet.PacketRequest\0228\n\006p"
      "acket\030\010 \002(\0132(.secft.proto.file_transfer_"
      "packet.Packet*\344\002\n\006Status\022\022\n\016STATUS_UNKNO"
      "WN\020\000\022\022\n\016STATUS_SUCCESS\020\001\022\032\n\026STATUS_INVAL"
      "ID_REQUEST\020\002\022\034\n\030STATUS_INVALID_PATH_NAME"
      "\020\003\022\031\n\025STATUS_PATH_NOT_FOUND\020\004\022\036\n\032STATUS_"
      "PATH_ALREADY_EXISTS\020\005\022\032\n\026STATUS_NO_DRIVE"
      "S_FOUND\020\006\022\024\n\020STATUS_DISK_FULL\020\007\022\030\n\024STATU"
      "S_ACCESS_DENIED\020\010\022\032\n\026STATUS_FILE_OPEN_ER"
      "ROR\020\t\022\034\n\030STATUS_FILE_CREATE_ERROR\020\n\022\033\n\027S"
      "TATUS_FILE_WRITE_ERROR\020\013\022\032\n\026STATUS_FILE_"
      "READ_ERROR\020\014"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2212);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protobuf/file_transfer.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_protobuf_2ffile_5ftransfer_2eproto
namespace secft {
namespace proto {
namespace file_transfer_packet {
const ::google::protobuf::EnumDescriptor* DriveList_Item_Type_descriptor() {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_enum_descriptors[0];
}
bool DriveList_Item_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DriveList_Item_Type DriveList_Item::TYPE_UNKNOWN;
const DriveList_Item_Type DriveList_Item::TYPE_CDROM;
const DriveList_Item_Type DriveList_Item::TYPE_REMOVABLE;
const DriveList_Item_Type DriveList_Item::TYPE_FIXED;
const DriveList_Item_Type DriveList_Item::TYPE_REMOTE;
const DriveList_Item_Type DriveList_Item::TYPE_RAM;
const DriveList_Item_Type DriveList_Item::TYPE_HOME_FOLDER;
const DriveList_Item_Type DriveList_Item::TYPE_DESKTOP_FOLDER;
const DriveList_Item_Type DriveList_Item::Type_MIN;
const DriveList_Item_Type DriveList_Item::Type_MAX;
const int DriveList_Item::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Packet_Flags_descriptor() {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_enum_descriptors[1];
}
bool Packet_Flags_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Packet_Flags Packet::FLAG_ERROR;
const Packet_Flags Packet::FLAG_PACKET;
const Packet_Flags Packet::FLAG_FIRST_PACKET;
const Packet_Flags Packet::FLAG_LAST_PACKET;
const Packet_Flags Packet::Flags_MIN;
const Packet_Flags Packet::Flags_MAX;
const int Packet::Flags_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Status_descriptor() {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_enum_descriptors[2];
}
bool Status_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void DriveList_Item::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DriveList_Item::kTypeFieldNumber;
const int DriveList_Item::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DriveList_Item::DriveList_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_DriveList_Item.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.DriveList.Item)
}
DriveList_Item::DriveList_Item(const DriveList_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.DriveList.Item)
}

void DriveList_Item::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

DriveList_Item::~DriveList_Item() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.DriveList.Item)
  SharedDtor();
}

void DriveList_Item::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DriveList_Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DriveList_Item::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DriveList_Item& DriveList_Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_DriveList_Item.base);
  return *internal_default_instance();
}


void DriveList_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.DriveList.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmptyNoArena();
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DriveList_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.DriveList.Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .secft.proto.file_transfer_packet.DriveList.Item.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::secft::proto::file_transfer_packet::DriveList_Item_Type_IsValid(value)) {
            set_type(static_cast< ::secft::proto::file_transfer_packet::DriveList_Item_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secft.proto.file_transfer_packet.DriveList.Item.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.DriveList.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.DriveList.Item)
  return false;
#undef DO_
}

void DriveList_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.DriveList.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .secft.proto.file_transfer_packet.DriveList.Item.Type type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.DriveList.Item.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.DriveList.Item)
}

::google::protobuf::uint8* DriveList_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.DriveList.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .secft.proto.file_transfer_packet.DriveList.Item.Type type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required string path = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.DriveList.Item.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.DriveList.Item)
  return target;
}

size_t DriveList_Item::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:secft.proto.file_transfer_packet.DriveList.Item)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_type()) {
    // required .secft.proto.file_transfer_packet.DriveList.Item.Type type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  return total_size;
}
size_t DriveList_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.DriveList.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string path = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required .secft.proto.file_transfer_packet.DriveList.Item.Type type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DriveList_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.DriveList.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const DriveList_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DriveList_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.DriveList.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.DriveList.Item)
    MergeFrom(*source);
  }
}

void DriveList_Item::MergeFrom(const DriveList_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.DriveList.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void DriveList_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.DriveList.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DriveList_Item::CopyFrom(const DriveList_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.DriveList.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DriveList_Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void DriveList_Item::Swap(DriveList_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DriveList_Item::InternalSwap(DriveList_Item* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DriveList_Item::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DriveList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DriveList::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DriveList::DriveList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_DriveList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.DriveList)
}
DriveList::DriveList(const DriveList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.DriveList)
}

void DriveList::SharedCtor() {
}

DriveList::~DriveList() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.DriveList)
  SharedDtor();
}

void DriveList::SharedDtor() {
}

void DriveList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DriveList::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DriveList& DriveList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_DriveList.base);
  return *internal_default_instance();
}


void DriveList::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.DriveList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DriveList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.DriveList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .secft.proto.file_transfer_packet.DriveList.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.DriveList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.DriveList)
  return false;
#undef DO_
}

void DriveList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.DriveList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .secft.proto.file_transfer_packet.DriveList.Item item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->item(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.DriveList)
}

::google::protobuf::uint8* DriveList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.DriveList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .secft.proto.file_transfer_packet.DriveList.Item item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->item(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.DriveList)
  return target;
}

size_t DriveList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.DriveList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .secft.proto.file_transfer_packet.DriveList.Item item = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DriveList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.DriveList)
  GOOGLE_DCHECK_NE(&from, this);
  const DriveList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DriveList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.DriveList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.DriveList)
    MergeFrom(*source);
  }
}

void DriveList::MergeFrom(const DriveList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.DriveList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void DriveList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.DriveList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DriveList::CopyFrom(const DriveList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.DriveList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DriveList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->item())) return false;
  return true;
}

void DriveList::Swap(DriveList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DriveList::InternalSwap(DriveList* other) {
  using std::swap;
  CastToBase(&item_)->InternalSwap(CastToBase(&other->item_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DriveList::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileList_Item::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileList_Item::kNameFieldNumber;
const int FileList_Item::kSizeFieldNumber;
const int FileList_Item::kModificationTimeFieldNumber;
const int FileList_Item::kIsDirectoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileList_Item::FileList_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_FileList_Item.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.FileList.Item)
}
FileList_Item::FileList_Item(const FileList_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_directory_) -
    reinterpret_cast<char*>(&size_)) + sizeof(is_directory_));
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.FileList.Item)
}

void FileList_Item::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_directory_) -
      reinterpret_cast<char*>(&size_)) + sizeof(is_directory_));
}

FileList_Item::~FileList_Item() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.FileList.Item)
  SharedDtor();
}

void FileList_Item::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileList_Item::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileList_Item::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileList_Item& FileList_Item::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_FileList_Item.base);
  return *internal_default_instance();
}


void FileList_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.FileList.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    name_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 14u) {
    ::memset(&size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&is_directory_) -
        reinterpret_cast<char*>(&size_)) + sizeof(is_directory_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FileList_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.FileList.Item)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secft.proto.file_transfer_packet.FileList.Item.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int64 modification_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_modification_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &modification_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool is_directory = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_is_directory();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_directory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.FileList.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.FileList.Item)
  return false;
#undef DO_
}

void FileList_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.FileList.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.FileList.Item.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required uint64 size = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->size(), output);
  }

  // required int64 modification_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->modification_time(), output);
  }

  // required bool is_directory = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_directory(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.FileList.Item)
}

::google::protobuf::uint8* FileList_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.FileList.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.FileList.Item.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required uint64 size = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->size(), target);
  }

  // required int64 modification_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->modification_time(), target);
  }

  // required bool is_directory = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_directory(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.FileList.Item)
  return target;
}

size_t FileList_Item::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:secft.proto.file_transfer_packet.FileList.Item)
  size_t total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_size()) {
    // required uint64 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  if (has_modification_time()) {
    // required int64 modification_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->modification_time());
  }

  if (has_is_directory()) {
    // required bool is_directory = 4;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t FileList_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.FileList.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required uint64 size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());

    // required int64 modification_time = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->modification_time());

    // required bool is_directory = 4;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileList_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.FileList.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const FileList_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileList_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.FileList.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.FileList.Item)
    MergeFrom(*source);
  }
}

void FileList_Item::MergeFrom(const FileList_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.FileList.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    if (cached_has_bits & 0x00000004u) {
      modification_time_ = from.modification_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_directory_ = from.is_directory_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FileList_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.FileList.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileList_Item::CopyFrom(const FileList_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.FileList.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileList_Item::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void FileList_Item::Swap(FileList_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileList_Item::InternalSwap(FileList_Item* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  swap(modification_time_, other->modification_time_);
  swap(is_directory_, other->is_directory_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileList_Item::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileList::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileList::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileList::FileList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_FileList.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.FileList)
}
FileList::FileList(const FileList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.FileList)
}

void FileList::SharedCtor() {
}

FileList::~FileList() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.FileList)
  SharedDtor();
}

void FileList::SharedDtor() {
}

void FileList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileList::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileList& FileList::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_FileList.base);
  return *internal_default_instance();
}


void FileList::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.FileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FileList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.FileList)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .secft.proto.file_transfer_packet.FileList.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.FileList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.FileList)
  return false;
#undef DO_
}

void FileList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.FileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .secft.proto.file_transfer_packet.FileList.Item item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->item(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.FileList)
}

::google::protobuf::uint8* FileList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.FileList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .secft.proto.file_transfer_packet.FileList.Item item = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->item(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.FileList)
  return target;
}

size_t FileList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.FileList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .secft.proto.file_transfer_packet.FileList.Item item = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.FileList)
  GOOGLE_DCHECK_NE(&from, this);
  const FileList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.FileList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.FileList)
    MergeFrom(*source);
  }
}

void FileList::MergeFrom(const FileList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.FileList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void FileList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.FileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileList::CopyFrom(const FileList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.FileList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileList::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->item())) return false;
  return true;
}

void FileList::Swap(FileList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileList::InternalSwap(FileList* other) {
  using std::swap;
  CastToBase(&item_)->InternalSwap(CastToBase(&other->item_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileList::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileListRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileListRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileListRequest::FileListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_FileListRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.FileListRequest)
}
FileListRequest::FileListRequest(const FileListRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.FileListRequest)
}

void FileListRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FileListRequest::~FileListRequest() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.FileListRequest)
  SharedDtor();
}

void FileListRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileListRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FileListRequest::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileListRequest& FileListRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_FileListRequest.base);
  return *internal_default_instance();
}


void FileListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.FileListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FileListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.FileListRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secft.proto.file_transfer_packet.FileListRequest.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.FileListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.FileListRequest)
  return false;
#undef DO_
}

void FileListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.FileListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.FileListRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.FileListRequest)
}

::google::protobuf::uint8* FileListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.FileListRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.FileListRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.FileListRequest)
  return target;
}

size_t FileListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.FileListRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string path = 1;
  if (has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FileListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.FileListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FileListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.FileListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.FileListRequest)
    MergeFrom(*source);
  }
}

void FileListRequest::MergeFrom(const FileListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.FileListRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    set_has_path();
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void FileListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.FileListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileListRequest::CopyFrom(const FileListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.FileListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileListRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void FileListRequest::Swap(FileListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileListRequest::InternalSwap(FileListRequest* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FileListRequest::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UploadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UploadRequest::kPathFieldNumber;
const int UploadRequest::kOverwriteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UploadRequest::UploadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_UploadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.UploadRequest)
}
UploadRequest::UploadRequest(const UploadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  overwrite_ = from.overwrite_;
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.UploadRequest)
}

void UploadRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  overwrite_ = false;
}

UploadRequest::~UploadRequest() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.UploadRequest)
  SharedDtor();
}

void UploadRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UploadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UploadRequest::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UploadRequest& UploadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_UploadRequest.base);
  return *internal_default_instance();
}


void UploadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.UploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmptyNoArena();
  }
  overwrite_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UploadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.UploadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secft.proto.file_transfer_packet.UploadRequest.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bool overwrite = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_overwrite();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &overwrite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.UploadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.UploadRequest)
  return false;
#undef DO_
}

void UploadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.UploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.UploadRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  // required bool overwrite = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->overwrite(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.UploadRequest)
}

::google::protobuf::uint8* UploadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.UploadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.UploadRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // required bool overwrite = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->overwrite(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.UploadRequest)
  return target;
}

size_t UploadRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:secft.proto.file_transfer_packet.UploadRequest)
  size_t total_size = 0;

  if (has_path()) {
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }

  if (has_overwrite()) {
    // required bool overwrite = 2;
    total_size += 1 + 1;
  }

  return total_size;
}
size_t UploadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.UploadRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string path = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());

    // required bool overwrite = 2;
    total_size += 1 + 1;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UploadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.UploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UploadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UploadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.UploadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.UploadRequest)
    MergeFrom(*source);
  }
}

void UploadRequest::MergeFrom(const UploadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.UploadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000002u) {
      overwrite_ = from.overwrite_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UploadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.UploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UploadRequest::CopyFrom(const UploadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.UploadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UploadRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void UploadRequest::Swap(UploadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UploadRequest::InternalSwap(UploadRequest* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(overwrite_, other->overwrite_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UploadRequest::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DownloadRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadRequest::DownloadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_DownloadRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.DownloadRequest)
}
DownloadRequest::DownloadRequest(const DownloadRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.DownloadRequest)
}

void DownloadRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DownloadRequest::~DownloadRequest() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.DownloadRequest)
  SharedDtor();
}

void DownloadRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DownloadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DownloadRequest::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DownloadRequest& DownloadRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_DownloadRequest.base);
  return *internal_default_instance();
}


void DownloadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.DownloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DownloadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.DownloadRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secft.proto.file_transfer_packet.DownloadRequest.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.DownloadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.DownloadRequest)
  return false;
#undef DO_
}

void DownloadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.DownloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.DownloadRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.DownloadRequest)
}

::google::protobuf::uint8* DownloadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.DownloadRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.DownloadRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.DownloadRequest)
  return target;
}

size_t DownloadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.DownloadRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string path = 1;
  if (has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DownloadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.DownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.DownloadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.DownloadRequest)
    MergeFrom(*source);
  }
}

void DownloadRequest::MergeFrom(const DownloadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.DownloadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    set_has_path();
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void DownloadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.DownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadRequest::CopyFrom(const DownloadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.DownloadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void DownloadRequest::Swap(DownloadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadRequest::InternalSwap(DownloadRequest* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DownloadRequest::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PacketRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PacketRequest::kDummyFieldNumber;
const int PacketRequest::kFileSizeFieldNumber;
const int PacketRequest::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PacketRequest::PacketRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_PacketRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.PacketRequest)
}
PacketRequest::PacketRequest(const PacketRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&file_size_, &from.file_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&dummy_) -
    reinterpret_cast<char*>(&file_size_)) + sizeof(dummy_));
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.PacketRequest)
}

void PacketRequest::SharedCtor() {
  ::memset(&file_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dummy_) -
      reinterpret_cast<char*>(&file_size_)) + sizeof(dummy_));
}

PacketRequest::~PacketRequest() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.PacketRequest)
  SharedDtor();
}

void PacketRequest::SharedDtor() {
}

void PacketRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PacketRequest::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PacketRequest& PacketRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_PacketRequest.base);
  return *internal_default_instance();
}


void PacketRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.PacketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    ::memset(&file_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&dummy_) -
        reinterpret_cast<char*>(&file_size_)) + sizeof(dummy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PacketRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.PacketRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 dummy = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_dummy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dummy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 file_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.PacketRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.PacketRequest)
  return false;
#undef DO_
}

void PacketRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.PacketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 dummy = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->dummy(), output);
  }

  // optional uint64 file_size = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->file_size(), output);
  }

  // optional uint64 offset = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.PacketRequest)
}

::google::protobuf::uint8* PacketRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.PacketRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 dummy = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->dummy(), target);
  }

  // optional uint64 file_size = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->file_size(), target);
  }

  // optional uint64 offset = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.PacketRequest)
  return target;
}

size_t PacketRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.PacketRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required uint32 dummy = 1;
  if (has_dummy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dummy());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 file_size = 2;
    if (has_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->file_size());
    }

    // optional uint64 offset = 3;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->offset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PacketRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.PacketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PacketRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PacketRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.PacketRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.PacketRequest)
    MergeFrom(*source);
  }
}

void PacketRequest::MergeFrom(const PacketRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.PacketRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      dummy_ = from.dummy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PacketRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.PacketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PacketRequest::CopyFrom(const PacketRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.PacketRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PacketRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  return true;
}

void PacketRequest::Swap(PacketRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PacketRequest::InternalSwap(PacketRequest* other) {
  using std::swap;
  swap(file_size_, other->file_size_);
  swap(offset_, other->offset_);
  swap(dummy_, other->dummy_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PacketRequest::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Packet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Packet::kFlagsFieldNumber;
const int Packet::kFileSizeFieldNumber;
const int Packet::kDataFieldNumber;
const int Packet::kUserNameFieldNumber;
const int Packet::kTokenFieldNumber;
const int Packet::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Packet::Packet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_Packet.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.Packet)
}
Packet::Packet(const Packet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_user_name()) {
    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&file_size_, &from.file_size_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&file_size_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.Packet)
}

void Packet::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&file_size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&file_size_)) + sizeof(flags_));
}

Packet::~Packet() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.Packet)
  SharedDtor();
}

void Packet::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Packet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Packet::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Packet& Packet::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_Packet.base);
  return *internal_default_instance();
}


void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      data_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      user_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      token_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 56u) {
    ::memset(&file_size_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&flags_) -
        reinterpret_cast<char*>(&file_size_)) + sizeof(flags_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Packet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.Packet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required uint64 file_size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string user_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), static_cast<int>(this->user_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secft.proto.file_transfer_packet.Packet.user_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string token = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secft.proto.file_transfer_packet.Packet.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.Packet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.Packet)
  return false;
#undef DO_
}

void Packet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 flags = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flags(), output);
  }

  // required uint64 file_size = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->file_size(), output);
  }

  // required bytes data = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // required string user_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.Packet.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_name(), output);
  }

  // required string token = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.Packet.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->token(), output);
  }

  // optional uint64 offset = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.Packet)
}

::google::protobuf::uint8* Packet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required uint32 flags = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flags(), target);
  }

  // required uint64 file_size = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->file_size(), target);
  }

  // required bytes data = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // required string user_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), static_cast<int>(this->user_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.Packet.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_name(), target);
  }

  // required string token = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.Packet.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->token(), target);
  }

  // optional uint64 offset = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.Packet)
  return target;
}

size_t Packet::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:secft.proto.file_transfer_packet.Packet)
  size_t total_size = 0;

  if (has_data()) {
    // required bytes data = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  if (has_user_name()) {
    // required string user_name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  if (has_token()) {
    // required string token = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  if (has_file_size()) {
    // required uint64 file_size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->file_size());
  }

  if (has_flags()) {
    // required uint32 flags = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());
  }

  return total_size;
}
size_t Packet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.Packet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000002f) ^ 0x0000002f) == 0) {  // All required fields are present.
    // required bytes data = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());

    // required string user_name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());

    // required string token = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());

    // required uint64 file_size = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->file_size());

    // required uint32 flags = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flags());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional uint64 offset = 6;
  if (has_offset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Packet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.Packet)
  GOOGLE_DCHECK_NE(&from, this);
  const Packet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Packet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.Packet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.Packet)
    MergeFrom(*source);
  }
}

void Packet::MergeFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.Packet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_user_name();
      user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000008u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000020u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Packet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Packet::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000002f) != 0x0000002f) return false;
  return true;
}

void Packet::Swap(Packet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Packet::InternalSwap(Packet* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_name_.Swap(&other->user_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(file_size_, other->file_size_);
  swap(offset_, other->offset_);
  swap(flags_, other->flags_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Packet::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateDirectoryRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateDirectoryRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateDirectoryRequest::CreateDirectoryRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_CreateDirectoryRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.CreateDirectoryRequest)
}
CreateDirectoryRequest::CreateDirectoryRequest(const CreateDirectoryRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.CreateDirectoryRequest)
}

void CreateDirectoryRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CreateDirectoryRequest::~CreateDirectoryRequest() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  SharedDtor();
}

void CreateDirectoryRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateDirectoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateDirectoryRequest::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateDirectoryRequest& CreateDirectoryRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_CreateDirectoryRequest.base);
  return *internal_default_instance();
}


void CreateDirectoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateDirectoryRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secft.proto.file_transfer_packet.CreateDirectoryRequest.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  return false;
#undef DO_
}

void CreateDirectoryRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.CreateDirectoryRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.CreateDirectoryRequest)
}

::google::protobuf::uint8* CreateDirectoryRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.CreateDirectoryRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  return target;
}

size_t CreateDirectoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string path = 1;
  if (has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDirectoryRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDirectoryRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateDirectoryRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.CreateDirectoryRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.CreateDirectoryRequest)
    MergeFrom(*source);
  }
}

void CreateDirectoryRequest::MergeFrom(const CreateDirectoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    set_has_path();
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void CreateDirectoryRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDirectoryRequest::CopyFrom(const CreateDirectoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.CreateDirectoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDirectoryRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void CreateDirectoryRequest::Swap(CreateDirectoryRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateDirectoryRequest::InternalSwap(CreateDirectoryRequest* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateDirectoryRequest::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RenameRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenameRequest::kOldNameFieldNumber;
const int RenameRequest::kNewNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenameRequest::RenameRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_RenameRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.RenameRequest)
}
RenameRequest::RenameRequest(const RenameRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  old_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_old_name()) {
    old_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_name_);
  }
  new_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_new_name()) {
    new_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_name_);
  }
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.RenameRequest)
}

void RenameRequest::SharedCtor() {
  old_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RenameRequest::~RenameRequest() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.RenameRequest)
  SharedDtor();
}

void RenameRequest::SharedDtor() {
  old_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RenameRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RenameRequest::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RenameRequest& RenameRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_RenameRequest.base);
  return *internal_default_instance();
}


void RenameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.RenameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      old_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      new_name_.ClearNonDefaultToEmptyNoArena();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RenameRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.RenameRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string old_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_old_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->old_name().data(), static_cast<int>(this->old_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secft.proto.file_transfer_packet.RenameRequest.old_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string new_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_name().data(), static_cast<int>(this->new_name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secft.proto.file_transfer_packet.RenameRequest.new_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.RenameRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.RenameRequest)
  return false;
#undef DO_
}

void RenameRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.RenameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string old_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_name().data(), static_cast<int>(this->old_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.RenameRequest.old_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->old_name(), output);
  }

  // required string new_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_name().data(), static_cast<int>(this->new_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.RenameRequest.new_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->new_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.RenameRequest)
}

::google::protobuf::uint8* RenameRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.RenameRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string old_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->old_name().data(), static_cast<int>(this->old_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.RenameRequest.old_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->old_name(), target);
  }

  // required string new_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_name().data(), static_cast<int>(this->new_name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.RenameRequest.new_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->new_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.RenameRequest)
  return target;
}

size_t RenameRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:secft.proto.file_transfer_packet.RenameRequest)
  size_t total_size = 0;

  if (has_old_name()) {
    // required string old_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->old_name());
  }

  if (has_new_name()) {
    // required string new_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_name());
  }

  return total_size;
}
size_t RenameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.RenameRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string old_name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->old_name());

    // required string new_name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_name());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RenameRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.RenameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RenameRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RenameRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.RenameRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.RenameRequest)
    MergeFrom(*source);
  }
}

void RenameRequest::MergeFrom(const RenameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.RenameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_old_name();
      old_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.old_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_new_name();
      new_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_name_);
    }
  }
}

void RenameRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.RenameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenameRequest::CopyFrom(const RenameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.RenameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenameRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RenameRequest::Swap(RenameRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenameRequest::InternalSwap(RenameRequest* other) {
  using std::swap;
  old_name_.Swap(&other->old_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  new_name_.Swap(&other->new_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RenameRequest::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveRequest::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveRequest::RemoveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_RemoveRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.RemoveRequest)
}
RemoveRequest::RemoveRequest(const RemoveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.RemoveRequest)
}

void RemoveRequest::SharedCtor() {
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RemoveRequest::~RemoveRequest() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.RemoveRequest)
  SharedDtor();
}

void RemoveRequest::SharedDtor() {
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RemoveRequest::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveRequest& RemoveRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_RemoveRequest.base);
  return *internal_default_instance();
}


void RemoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.RemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    path_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RemoveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.RemoveRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "secft.proto.file_transfer_packet.RemoveRequest.path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.RemoveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.RemoveRequest)
  return false;
#undef DO_
}

void RemoveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.RemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.RemoveRequest.path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.RemoveRequest)
}

::google::protobuf::uint8* RemoveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.RemoveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string path = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "secft.proto.file_transfer_packet.RemoveRequest.path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.RemoveRequest)
  return target;
}

size_t RemoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.RemoveRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required string path = 1;
  if (has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->path());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RemoveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.RemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.RemoveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.RemoveRequest)
    MergeFrom(*source);
  }
}

void RemoveRequest::MergeFrom(const RemoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.RemoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_path()) {
    set_has_path();
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
}

void RemoveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.RemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveRequest::CopyFrom(const RemoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.RemoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RemoveRequest::Swap(RemoveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveRequest::InternalSwap(RemoveRequest* other) {
  using std::swap;
  path_.Swap(&other->path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RemoveRequest::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Reply::InitAsDefaultInstance() {
  ::secft::proto::file_transfer_packet::_Reply_default_instance_._instance.get_mutable()->file_list_ = const_cast< ::secft::proto::file_transfer_packet::FileList*>(
      ::secft::proto::file_transfer_packet::FileList::internal_default_instance());
  ::secft::proto::file_transfer_packet::_Reply_default_instance_._instance.get_mutable()->packet_ = const_cast< ::secft::proto::file_transfer_packet::Packet*>(
      ::secft::proto::file_transfer_packet::Packet::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reply::kStatusFieldNumber;
const int Reply::kFileListFieldNumber;
const int Reply::kPacketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reply::Reply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_Reply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.Reply)
}
Reply::Reply(const Reply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_file_list()) {
    file_list_ = new ::secft::proto::file_transfer_packet::FileList(*from.file_list_);
  } else {
    file_list_ = NULL;
  }
  if (from.has_packet()) {
    packet_ = new ::secft::proto::file_transfer_packet::Packet(*from.packet_);
  } else {
    packet_ = NULL;
  }
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.Reply)
}

void Reply::SharedCtor() {
  ::memset(&file_list_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&file_list_)) + sizeof(status_));
}

Reply::~Reply() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.Reply)
  SharedDtor();
}

void Reply::SharedDtor() {
  if (this != internal_default_instance()) delete file_list_;
  if (this != internal_default_instance()) delete packet_;
}

void Reply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Reply::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reply& Reply::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_Reply.base);
  return *internal_default_instance();
}


void Reply::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.Reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(file_list_ != NULL);
      file_list_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(packet_ != NULL);
      packet_->Clear();
    }
  }
  status_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.Reply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .secft.proto.file_transfer_packet.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::secft::proto::file_transfer_packet::Status_IsValid(value)) {
            set_status(static_cast< ::secft::proto::file_transfer_packet::Status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(
                1, static_cast< ::google::protobuf::uint64>(value));
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .secft.proto.file_transfer_packet.FileList file_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_list()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .secft.proto.file_transfer_packet.Packet packet = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.Reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.Reply)
  return false;
#undef DO_
}

void Reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.Reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .secft.proto.file_transfer_packet.Status status = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional .secft.proto.file_transfer_packet.FileList file_list = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_file_list(), output);
  }

  // optional .secft.proto.file_transfer_packet.Packet packet = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_packet(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.Reply)
}

::google::protobuf::uint8* Reply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.Reply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .secft.proto.file_transfer_packet.Status status = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional .secft.proto.file_transfer_packet.FileList file_list = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_file_list(), deterministic, target);
  }

  // optional .secft.proto.file_transfer_packet.Packet packet = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_packet(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.Reply)
  return target;
}

size_t Reply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.Reply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // required .secft.proto.file_transfer_packet.Status status = 1;
  if (has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .secft.proto.file_transfer_packet.FileList file_list = 2;
    if (has_file_list()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *file_list_);
    }

    // optional .secft.proto.file_transfer_packet.Packet packet = 3;
    if (has_packet()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *packet_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.Reply)
  GOOGLE_DCHECK_NE(&from, this);
  const Reply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Reply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.Reply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.Reply)
    MergeFrom(*source);
  }
}

void Reply::MergeFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.Reply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_file_list()->::secft::proto::file_transfer_packet::FileList::MergeFrom(from.file_list());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_packet()->::secft::proto::file_transfer_packet::Packet::MergeFrom(from.packet());
    }
    if (cached_has_bits & 0x00000004u) {
      status_ = from.status_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Reply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.Reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reply::CopyFrom(const Reply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.Reply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000004) != 0x00000004) return false;
  if (has_file_list()) {
    if (!this->file_list_->IsInitialized()) return false;
  }
  if (has_packet()) {
    if (!this->packet_->IsInitialized()) return false;
  }
  return true;
}

void Reply::Swap(Reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reply::InternalSwap(Reply* other) {
  using std::swap;
  swap(file_list_, other->file_list_);
  swap(packet_, other->packet_);
  swap(status_, other->status_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Reply::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::secft::proto::file_transfer_packet::_Request_default_instance_._instance.get_mutable()->file_list_request_ = const_cast< ::secft::proto::file_transfer_packet::FileListRequest*>(
      ::secft::proto::file_transfer_packet::FileListRequest::internal_default_instance());
  ::secft::proto::file_transfer_packet::_Request_default_instance_._instance.get_mutable()->create_directory_request_ = const_cast< ::secft::proto::file_transfer_packet::CreateDirectoryRequest*>(
      ::secft::proto::file_transfer_packet::CreateDirectoryRequest::internal_default_instance());
  ::secft::proto::file_transfer_packet::_Request_default_instance_._instance.get_mutable()->rename_request_ = const_cast< ::secft::proto::file_transfer_packet::RenameRequest*>(
      ::secft::proto::file_transfer_packet::RenameRequest::internal_default_instance());
  ::secft::proto::file_transfer_packet::_Request_default_instance_._instance.get_mutable()->remove_request_ = const_cast< ::secft::proto::file_transfer_packet::RemoveRequest*>(
      ::secft::proto::file_transfer_packet::RemoveRequest::internal_default_instance());
  ::secft::proto::file_transfer_packet::_Request_default_instance_._instance.get_mutable()->download_request_ = const_cast< ::secft::proto::file_transfer_packet::DownloadRequest*>(
      ::secft::proto::file_transfer_packet::DownloadRequest::internal_default_instance());
  ::secft::proto::file_transfer_packet::_Request_default_instance_._instance.get_mutable()->upload_request_ = const_cast< ::secft::proto::file_transfer_packet::UploadRequest*>(
      ::secft::proto::file_transfer_packet::UploadRequest::internal_default_instance());
  ::secft::proto::file_transfer_packet::_Request_default_instance_._instance.get_mutable()->packet_request_ = const_cast< ::secft::proto::file_transfer_packet::PacketRequest*>(
      ::secft::proto::file_transfer_packet::PacketRequest::internal_default_instance());
  ::secft::proto::file_transfer_packet::_Request_default_instance_._instance.get_mutable()->packet_ = const_cast< ::secft::proto::file_transfer_packet::Packet*>(
      ::secft::proto::file_transfer_packet::Packet::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kFileListRequestFieldNumber;
const int Request::kCreateDirectoryRequestFieldNumber;
const int Request::kRenameRequestFieldNumber;
const int Request::kRemoveRequestFieldNumber;
const int Request::kDownloadRequestFieldNumber;
const int Request::kUploadRequestFieldNumber;
const int Request::kPacketRequestFieldNumber;
const int Request::kPacketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_Request.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:secft.proto.file_transfer_packet.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_file_list_request()) {
    file_list_request_ = new ::secft::proto::file_transfer_packet::FileListRequest(*from.file_list_request_);
  } else {
    file_list_request_ = NULL;
  }
  if (from.has_create_directory_request()) {
    create_directory_request_ = new ::secft::proto::file_transfer_packet::CreateDirectoryRequest(*from.create_directory_request_);
  } else {
    create_directory_request_ = NULL;
  }
  if (from.has_rename_request()) {
    rename_request_ = new ::secft::proto::file_transfer_packet::RenameRequest(*from.rename_request_);
  } else {
    rename_request_ = NULL;
  }
  if (from.has_remove_request()) {
    remove_request_ = new ::secft::proto::file_transfer_packet::RemoveRequest(*from.remove_request_);
  } else {
    remove_request_ = NULL;
  }
  if (from.has_download_request()) {
    download_request_ = new ::secft::proto::file_transfer_packet::DownloadRequest(*from.download_request_);
  } else {
    download_request_ = NULL;
  }
  if (from.has_upload_request()) {
    upload_request_ = new ::secft::proto::file_transfer_packet::UploadRequest(*from.upload_request_);
  } else {
    upload_request_ = NULL;
  }
  if (from.has_packet_request()) {
    packet_request_ = new ::secft::proto::file_transfer_packet::PacketRequest(*from.packet_request_);
  } else {
    packet_request_ = NULL;
  }
  if (from.has_packet()) {
    packet_ = new ::secft::proto::file_transfer_packet::Packet(*from.packet_);
  } else {
    packet_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:secft.proto.file_transfer_packet.Request)
}

void Request::SharedCtor() {
  ::memset(&file_list_request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&packet_) -
      reinterpret_cast<char*>(&file_list_request_)) + sizeof(packet_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:secft.proto.file_transfer_packet.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != internal_default_instance()) delete file_list_request_;
  if (this != internal_default_instance()) delete create_directory_request_;
  if (this != internal_default_instance()) delete rename_request_;
  if (this != internal_default_instance()) delete remove_request_;
  if (this != internal_default_instance()) delete download_request_;
  if (this != internal_default_instance()) delete upload_request_;
  if (this != internal_default_instance()) delete packet_request_;
  if (this != internal_default_instance()) delete packet_;
}

void Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_protobuf_2ffile_5ftransfer_2eproto::scc_info_Request.base);
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:secft.proto.file_transfer_packet.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(file_list_request_ != NULL);
      file_list_request_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(create_directory_request_ != NULL);
      create_directory_request_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(rename_request_ != NULL);
      rename_request_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(remove_request_ != NULL);
      remove_request_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(download_request_ != NULL);
      download_request_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(upload_request_ != NULL);
      upload_request_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(packet_request_ != NULL);
      packet_request_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(packet_ != NULL);
      packet_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:secft.proto.file_transfer_packet.Request)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .secft.proto.file_transfer_packet.FileListRequest file_list_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file_list_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .secft.proto.file_transfer_packet.CreateDirectoryRequest create_directory_request = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_create_directory_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .secft.proto.file_transfer_packet.RenameRequest rename_request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rename_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .secft.proto.file_transfer_packet.RemoveRequest remove_request = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_remove_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .secft.proto.file_transfer_packet.DownloadRequest download_request = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_download_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .secft.proto.file_transfer_packet.UploadRequest upload_request = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_upload_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .secft.proto.file_transfer_packet.PacketRequest packet_request = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packet_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .secft.proto.file_transfer_packet.Packet packet = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_packet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:secft.proto.file_transfer_packet.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:secft.proto.file_transfer_packet.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:secft.proto.file_transfer_packet.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .secft.proto.file_transfer_packet.FileListRequest file_list_request = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_file_list_request(), output);
  }

  // optional .secft.proto.file_transfer_packet.CreateDirectoryRequest create_directory_request = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_create_directory_request(), output);
  }

  // optional .secft.proto.file_transfer_packet.RenameRequest rename_request = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_rename_request(), output);
  }

  // optional .secft.proto.file_transfer_packet.RemoveRequest remove_request = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_remove_request(), output);
  }

  // required .secft.proto.file_transfer_packet.DownloadRequest download_request = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_download_request(), output);
  }

  // required .secft.proto.file_transfer_packet.UploadRequest upload_request = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_upload_request(), output);
  }

  // required .secft.proto.file_transfer_packet.PacketRequest packet_request = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_packet_request(), output);
  }

  // required .secft.proto.file_transfer_packet.Packet packet = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_packet(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:secft.proto.file_transfer_packet.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:secft.proto.file_transfer_packet.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .secft.proto.file_transfer_packet.FileListRequest file_list_request = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_file_list_request(), deterministic, target);
  }

  // optional .secft.proto.file_transfer_packet.CreateDirectoryRequest create_directory_request = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_create_directory_request(), deterministic, target);
  }

  // optional .secft.proto.file_transfer_packet.RenameRequest rename_request = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_rename_request(), deterministic, target);
  }

  // optional .secft.proto.file_transfer_packet.RemoveRequest remove_request = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_remove_request(), deterministic, target);
  }

  // required .secft.proto.file_transfer_packet.DownloadRequest download_request = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_download_request(), deterministic, target);
  }

  // required .secft.proto.file_transfer_packet.UploadRequest upload_request = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_upload_request(), deterministic, target);
  }

  // required .secft.proto.file_transfer_packet.PacketRequest packet_request = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_packet_request(), deterministic, target);
  }

  // required .secft.proto.file_transfer_packet.Packet packet = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_packet(), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:secft.proto.file_transfer_packet.Request)
  return target;
}

size_t Request::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:secft.proto.file_transfer_packet.Request)
  size_t total_size = 0;

  if (has_download_request()) {
    // required .secft.proto.file_transfer_packet.DownloadRequest download_request = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *download_request_);
  }

  if (has_upload_request()) {
    // required .secft.proto.file_transfer_packet.UploadRequest upload_request = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upload_request_);
  }

  if (has_packet_request()) {
    // required .secft.proto.file_transfer_packet.PacketRequest packet_request = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *packet_request_);
  }

  if (has_packet()) {
    // required .secft.proto.file_transfer_packet.Packet packet = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *packet_);
  }

  return total_size;
}
size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:secft.proto.file_transfer_packet.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (((_has_bits_[0] & 0x000000f0) ^ 0x000000f0) == 0) {  // All required fields are present.
    // required .secft.proto.file_transfer_packet.DownloadRequest download_request = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *download_request_);

    // required .secft.proto.file_transfer_packet.UploadRequest upload_request = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *upload_request_);

    // required .secft.proto.file_transfer_packet.PacketRequest packet_request = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *packet_request_);

    // required .secft.proto.file_transfer_packet.Packet packet = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *packet_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .secft.proto.file_transfer_packet.FileListRequest file_list_request = 1;
    if (has_file_list_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *file_list_request_);
    }

    // optional .secft.proto.file_transfer_packet.CreateDirectoryRequest create_directory_request = 2;
    if (has_create_directory_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *create_directory_request_);
    }

    // optional .secft.proto.file_transfer_packet.RenameRequest rename_request = 3;
    if (has_rename_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *rename_request_);
    }

    // optional .secft.proto.file_transfer_packet.RemoveRequest remove_request = 4;
    if (has_remove_request()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *remove_request_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:secft.proto.file_transfer_packet.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:secft.proto.file_transfer_packet.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:secft.proto.file_transfer_packet.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:secft.proto.file_transfer_packet.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_file_list_request()->::secft::proto::file_transfer_packet::FileListRequest::MergeFrom(from.file_list_request());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_create_directory_request()->::secft::proto::file_transfer_packet::CreateDirectoryRequest::MergeFrom(from.create_directory_request());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_rename_request()->::secft::proto::file_transfer_packet::RenameRequest::MergeFrom(from.rename_request());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_remove_request()->::secft::proto::file_transfer_packet::RemoveRequest::MergeFrom(from.remove_request());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_download_request()->::secft::proto::file_transfer_packet::DownloadRequest::MergeFrom(from.download_request());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_upload_request()->::secft::proto::file_transfer_packet::UploadRequest::MergeFrom(from.upload_request());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_packet_request()->::secft::proto::file_transfer_packet::PacketRequest::MergeFrom(from.packet_request());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_packet()->::secft::proto::file_transfer_packet::Packet::MergeFrom(from.packet());
    }
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:secft.proto.file_transfer_packet.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:secft.proto.file_transfer_packet.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x000000f0) != 0x000000f0) return false;
  if (has_file_list_request()) {
    if (!this->file_list_request_->IsInitialized()) return false;
  }
  if (has_create_directory_request()) {
    if (!this->create_directory_request_->IsInitialized()) return false;
  }
  if (has_rename_request()) {
    if (!this->rename_request_->IsInitialized()) return false;
  }
  if (has_remove_request()) {
    if (!this->remove_request_->IsInitialized()) return false;
  }
  if (has_download_request()) {
    if (!this->download_request_->IsInitialized()) return false;
  }
  if (has_upload_request()) {
    if (!this->upload_request_->IsInitialized()) return false;
  }
  if (has_packet_request()) {
    if (!this->packet_request_->IsInitialized()) return false;
  }
  if (has_packet()) {
    if (!this->packet_->IsInitialized()) return false;
  }
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(file_list_request_, other->file_list_request_);
  swap(create_directory_request_, other->create_directory_request_);
  swap(rename_request_, other->rename_request_);
  swap(remove_request_, other->remove_request_);
  swap(download_request_, other->download_request_);
  swap(upload_request_, other->upload_request_);
  swap(packet_request_, other->packet_request_);
  swap(packet_, other->packet_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_protobuf_2ffile_5ftransfer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_protobuf_2ffile_5ftransfer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace file_transfer_packet
}  // namespace proto
}  // namespace secft
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::DriveList_Item* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::DriveList_Item >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::DriveList_Item >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::DriveList* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::DriveList >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::DriveList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::FileList_Item* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::FileList_Item >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::FileList_Item >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::FileList* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::FileList >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::FileList >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::FileListRequest* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::FileListRequest >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::FileListRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::UploadRequest* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::UploadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::UploadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::DownloadRequest* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::DownloadRequest >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::DownloadRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::PacketRequest* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::PacketRequest >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::PacketRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::Packet* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::Packet >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::Packet >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::CreateDirectoryRequest* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::CreateDirectoryRequest >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::CreateDirectoryRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::RenameRequest* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::RenameRequest >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::RenameRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::RemoveRequest* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::RemoveRequest >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::RemoveRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::Reply* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::Reply >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::Reply >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::secft::proto::file_transfer_packet::Request* Arena::CreateMaybeMessage< ::secft::proto::file_transfer_packet::Request >(Arena* arena) {
  return Arena::CreateInternal< ::secft::proto::file_transfer_packet::Request >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
